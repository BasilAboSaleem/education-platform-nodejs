<style>
  /* شطب المهمة عند التحديد */
  .task-checkbox:checked + label {
    text-decoration: line-through;
    opacity: 0.7;
  }

  /* زر الحذف الصغير */
  .delete-task-btn {
    background: transparent;
    border: none;
    color: #dc3545;
    font-size: 1.2rem;
    cursor: pointer;
    padding: 0;
  }

  .delete-task-btn:hover {
    color: #a71d2a;
  }

  /* تنسيق بسيط لقائمة المهام */
  .todo-list li {
    padding: 0.5rem 0;
    border-bottom: 1px solid #ddd;
  }

  /* حاوية المهمة كاملة */
  .task-item {
    display: flex;
    flex-direction: column; /* لجعل المحتويات عمودية */
  }

  /* السطر الأول: checkbox والعنوان */
  .task-header {
    display: flex;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .task-checkbox {
    width: 18px;
    height: 18px;
    cursor: pointer;
    flex-shrink: 0;
    margin-top: 4px; /* لضبط محاذاة الـ checkbox مع العنوان */
  }

  /* العنوان في سطر منفصل ويأخذ كامل العرض */
.task-title-label {
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  user-select: none;
  white-space: normal; /* السماح بالانكسار */
  line-height: 1.3;
  flex: 1 1 auto; /* السماح للعنصر بالتمدد والضغط ليناسب النص */
  word-break: break-word; /* كسر الكلمات الطويلة لو لزم */
}

  /* السطر الثاني: الحالة، التاريخ، زر الحذف */
  .task-footer {
    margin-left: 26px; /* لجعلها تبدأ بعد الـ checkbox */
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 0.875rem;
    color: #555;
    margin-top: 4px;
  }

  .task-meta {
    display: flex;
    align-items: center;
  }

  .task-meta .badge {
    margin-left: 0.5rem;
  }
</style>

<div class="row flex-grow">
  <div class="col-12 grid-margin stretch-card">
    <div class="card card-rounded">
      <div class="card-body">
        <div class="row">
          <div class="col-lg-12">

            <div class="d-flex justify-content-between align-items-center">
              <h4 class="card-title card-title-dash">Todo list</h4>
              <div class="add-items d-flex mb-0">
                <button 
                  id="showTaskFormBtn" 
                  type="button" 
                  class="add btn btn-icons btn-rounded btn-primary todo-list-add-btn text-white me-0 pl-12p">
                  <i class="mdi mdi-plus"></i>
                </button>
              </div>
            </div>

            <form 
              id="taskForm" 
              action="/<%= user && user.role ? user.role.toLowerCase() : 'guest' %>/addTask" 
              method="POST" 
              class="mt-3 p-3 border rounded shadow-sm" 
              style="display: none; max-width: 400px;">
              <div class="mb-3">
                <label for="title" class="form-label fw-semibold">Task Title</label>
                <input 
                  type="text" 
                  id="title" 
                  name="title" 
                  class="form-control form-control-lg" 
                  placeholder="Enter task title" 
                  required 
                  style="font-size: 1.1rem;">
              </div>
              <div class="mb-3">
                <label for="dueDate" class="form-label fw-semibold">Due Date</label>
                <input 
                  type="date" 
                  id="dueDate" 
                  name="dueDate" 
                  class="form-control form-control-lg" 
                  required
                  style="font-size: 1.1rem;">
              </div>
              <button type="submit" class="btn btn-primary btn-lg w-100">Add Task</button>
            </form>

            <div class="list-wrapper mt-4">
           <ul class="todo-list todo-list-rounded">
  <% if (tasks.length === 0) { %>
    <p class="text-muted mt-3">No tasks found.</p>
  <% } %>
  <% tasks.forEach((task, index) => { %>
    <li>
      <div class="task-item">
        <div class="task-header">
          <input 
            class="task-checkbox" 
            type="checkbox" 
            id="taskCheck<%= index %>" 
            data-task-id="<%= task._id %>"
            <%= task.status === 'done' || task.status === 'expired' ? 'checked' : '' %>>
          <label for="taskCheck<%= index %>" class="task-title-label">
            <%= task.title %>
          </label>
        </div>

        <div class="task-footer">
          <div class="task-meta">
            <%= moment(task.dueDate).format('DD MMMM YYYY') %>
            <% if (task.status === 'expired') { %>
              <span class="badge badge-opacity-danger ms-2">Expired</span>
            <% } else if (task.status === 'done') { %>
              <span class="badge badge-opacity-success ms-2">Done</span>
            <% } else { %>
              <span class="badge badge-opacity-warning ms-2">Due tomorrow</span>
            <% } %>
          </div>

         <form 
  action="/<%= user.role.toLowerCase() %>/deleteTask/<%= task._id %>?_method=DELETE" 
  method="POST" 
  onsubmit="return confirm('Are you sure you want to delete this task?')">
  <button type="submit" class="delete-task-btn" title="Delete task">
    <i class="mdi mdi-delete"></i>
  </button>
</form>
        </div>
      </div>
    </li>
  <% }) %>
</ul>
            </div>

          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.getElementById("showTaskFormBtn").addEventListener("click", function () {
    const form = document.getElementById("taskForm");
    form.style.display = form.style.display === "none" ? "block" : "none";
  });

  document.querySelectorAll('.task-checkbox').forEach(checkbox => {
    checkbox.addEventListener('change', async function () {
      const taskId = this.getAttribute('data-task-id');
      const dueDateText = this.closest('li').querySelector('.task-meta').textContent;
      const dueDate = new Date(dueDateText);
      const now = new Date();
      const isExpired = now > dueDate;
      const newStatus = isExpired ? 'expired' : 'done';

      try {
        const response = await fetch(`/<%= user.role.toLowerCase() %>/tasks/${taskId}/update-status`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: newStatus })
        });
        if (response.ok) {
          location.reload();
        } else {
          alert('Failed to update task status.');
        }
      } catch (err) {
        console.error(err);
      }
    });
  });
</script>
